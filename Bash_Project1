#!/bin/bash

## Install Nodejs 14.x
node_js() {
    sudo apt update
    curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -

    cat /etc/apt/sources.list.d/nodesource.list
    
    sudo apt -y install nodejs
    sudo apt -y install gcc g++ make
    curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    sudo apt update && sudo apt install yarn
    sudo apt install wget ca-certificates
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
    sudo apt update

    
}

## Clone_Repo

git_repo() {
    git clone https://github.com/omarmohsen/pern-stack-example.git
}

## Create an IP config.file for the local machine to use static address 
## My Current Ip Address is 10.0.2.15 

IP_Config() { 
    sudo tee /etc/netplan/01-network-manager-all.yaml <<EOF
network:
  version: 2
  renderer: NetworkManager
  ethernets:
    enp0s3:
      dhcp4: false
      dhcp6: false
      addresses: [10.0.2.15/24]
      routes:
        - to: default
          via: 10.0.2.2
      nameservers:
          addresses: [192.168.1.1,172.17.0.1]
EOF
    sudo netplan apply
    sudo systemctl restart NetworkManager
}

##change User to node
add_user_node() {
    sudo adduser node
    sudo -u node
}

retrieve_IP() {
    IP_ADDRESS=$(ip -4 addr show enp0s3 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
}

## Installing Postgresql 

installing_postgresql(){
    sudo apt update
    sudo apt install postgresql postgresql-contrib
    sudo systemctl start postgresql
    sudo systemctl enable postgresql
    sudo systemctl status postgresql

    sudo -u postgres psql -c "CREATE USER saady WITH PASSWORD 'mido2023';"
    sudo -u postgres psql -c "CREATE DATABASE demo_db"
    sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE demo_db TO saady;"
   
    sudo systemctl restart postgresql
}


## Run UI tests 

RUN_UI_tests() {
    cd pern-stack-example
    cd ui
    sudo apt install npm
    npm audit fix
    npm run test & 
}

## Build UI 

BUILD_UI() {
    npm install
    npm run build
    npm install -g serve
    
    npm audit fix
}

## modify the ENVIRONMENT to add 'demo' environment within the if statement

add_env() {
     
    ENVIRONMENT=demo npm run build
}

## start the application

deploy_app() {
    cd ..
    
    cp -r api/dist/* .
    cp api/swagger.css .
    npm install pg
     
    node api.bundle.js
}


node_js

git_repo

IP_Config



retrieve_IP

installing_postgresql

RUN_UI_tests

BUILD_UI
cd pern-stack-example
cd api
npm install webpack

sed -i "s/module/else if (environment === 'demo') {\n  console.log('this is demo env')\n  ENVIRONMENT_VARIABLES = {\n    'process.env.HOST': JSON.stringify('$IP_ADDRESS'),\n    'process.env.USER': JSON.stringify('saady'),\n    'process.env.DB': JSON.stringify('demo_db'),\n    'process.env.DIALECT': JSON.stringify('postgres'),\n    'process.env.PORT': JSON.stringify('3080'),\n    'process.env.PG_CONNECTION_STR': JSON.stringify('postgres:\/\/saady:mido2023@$IP_ADDRESS:5432\/demo_db')\n  };\n}\n\n&/" webpack.config.js


add_env

add_user_node

deploy_app
